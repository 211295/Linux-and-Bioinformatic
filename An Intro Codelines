green is the terminal
~ is the way to your user terminal
pwd = check you directory, print work directory 
ls = show list / (-l) = return in a list format, (-h) = format more comprehensive, (-a) = show the hiden archive, with start at " . "
mkdir <PATH/name_directory> = make a directory / (-p) = creat a parent directory does not exist 
cd <name_directory> = change directory
touch <text.txt> = create a text with name <text.txt> 
nano <text.txt> = edit the text created with touch
[Ctrl] + x = getout ot documemt / Y to save ; N to dont save
cat <some_word> = select the strings in text
grep <some_word> = show the line with the string meantioned
sed = substitute every string insiede the ex: "/old one/new one/" (-i) = sobrescreve o arquivo com resultado gerado
g = in the end of "-i </old one/new one/g>"
| = concatenet 2 or more commands in one line, pipe
<file> > <other_file> = make a direction of the archive to save in "other_file"
<file> >> <other_file> = direction again to a new one, but not substitute, only add the informations
cp <old_archive> <directory_name/new_archive> = copy the archive in a directory 
    (-u) = update, copy only missing information to new file, (-i) = ask you sure make this copy because cp OVERWIRTE the new copy, (-n) oposite of -i, (-p) = preserves the atributes 
mv <PATH/text> <directory/new_name> = move the archive and folder to the same directory with other name
rm <directory/archive> = remove any archive or folder
wget www... = download the archive directly on terminal
.gz = format of archive
gunzip = unzip file (descompactar arquivo)
scp -P <door> -r <archive_directory>/ 'serve'/'username'/'directory'/'folder'> = copy a holy directory to other username, indicate the door (-P) and the kind of archive (-r) Residual 
man <command_you_wanna_learn> = MANUAL OF THE COMMAND, extremy usable 
apropos <some_word>= find a word that describre a command, so you can find all commands you wanna with the some_word (-a) = you add more words, concatenete
info <command> or <documentation> = Read documantion and info of commands
which -a <filename> = locate a command, returns the pathnames
help = 
stdind =
stdout =
stderr =
scontrol =
[Shift] + [Insert] = Ctrl V
######################################################################################################################################################################################################
ls = list show | -l = in list way | -lash =  | -h = print size
[work with a list, similar in python and there is a commands to work as a strings]
ls - l [abcdef] OR ls - l [a-f] = make a list of all files start with a to f you have
ls abc[defghi] OR ls abc[d-i] = make a list of all files have the letters d to i after 'abc', so the files are abcd , abce , abcf , abcg , abch , abci PAY ATENTION DONT WORKS FOR NUMBERS just 1-9
ls abc? = wild-card character to represent exactly one of any kind of character after 'abc'
ls abc{d,e,f,g,h,i} or ls abc{d..i} = PAY ATENTION ON DOTS BETWEEN 'd' AND 'i' MEANS YOU WANNA GET A RANGE LIKE IN [ ] and the resutl is te same as "ls abc[d-i]"
ls abc{$((10*5)),$[2**5]} = show list (literaly) of "abc50" and "abc32"
ls /abc/d*f = takes all files in 'abc' directory start to 'd' and finish with 'f' (litteraly) doesn't matter the length name, therefore the * menas 
ls /abc/defg[h-o]* = shows all files in 'abc' directory with name 'defg' follow with letter 'h' to 'o' and doesn't matter the  length name | SAME OF ls /abc/defg{h..o}*
ls /abc/defg[hijl]* = shows all files in 'abc' directory with name 'defg' follow with letter 'h' to 'l' and doesn't matter the legnt name
ls /abc/defg[hijl]? = shows all files in 'abc' directory with name 'defg' follow with letter 'h' to 'l' and have just one more letter after the string variate, therefore just a file with 6 letters
ls 
ls
ls

########################################################################################################################################################################################################

